SET SERVEROUTPUT ON
DECLARE

P_ORIGEN    GELEC.ED_CLIENTES.CUENTA%TYPE:='3883479936';
P_DESTINO   GELEC.ED_CLIENTES.CUENTA%TYPE:='8655839590';
P_RESULTADO VARCHAR(20);

BEGIN
  
    FOR NOTA IN ( 
            SELECT 
                CN.ID_NOTA, 
                (SELECT OBSERVACIONES FROM GELEC.ED_NOTAS WHERE ID_NOTA=CN.ID_NOTA) OBSERVACIONES
            FROM 
                GELEC.ED_CLIENTE_NOTA CN
            WHERE
                CN.CUENTA = P_ORIGEN
                AND (SELECT ADD_MONTHS (L.FECHA, 6) FROM GELEC.ED_LOG L WHERE L.LOG_ID = CN.LOG_DESDE) >= SYSDATE
                AND CN.ID_NOTA IN (SELECT ID_NOTA FROM GELEC.ED_NOTAS WHERE ID_TIPO_NOTA IN (3,4) AND OBSERVACIONES LIKE '%CLIENTE MULTIPLE%')    
    ) LOOP
          -- QUITO LEYENDA DE OTRA POSIBLE MIGRACION ANTERIOR PARA NO INCREMENTAR EL LARGO DEL CAMPO
--          IF SUBSTR(NOTA.OBSERVACIONES,1,9)='[MIGRADO' THEN
--              NOTA.OBSERVACIONES:= SUBSTR(NOTA.OBSERVACIONES, INSTR(NOTA.OBSERVACIONES,']')+2, LENGTH(NOTA.OBSERVACIONES));
--          END IF;
          NOTA.OBSERVACIONES:= REPLACE(NOTA.OBSERVACIONES,'[MIGRADO] ',NULL);
          -- SI EL LARGO DE LA NOTA Y LO QUE SE ESTIMA QUE SE VA A AGREGAR SUPERA EL LIMITE NO INGRESA LEYENDA
          IF 500-LENGTH(NOTA.OBSERVACIONES)>=35 THEN 
              NOTA.OBSERVACIONES:= '[MIGRADO] '||NOTA.OBSERVACIONES;
          END IF;
          --ACTUALIZO CAMPO OBSERVACIONES EN GELEC.ED_NOTAS
--          UPDATE GELEC.ED_NOTAS SET OBSERVACIONES=NOTA.OBSERVACIONES WHERE ID_NOTA=NOTA.ID_NOTA;
--          UPDATE GELEC.ED_CLIENTE_NOTA SET CUENTA=P_DESTINO WHERE ID_NOTA=NOTA.ID_NOTA;
          
    END LOOP;


EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Sin Telefono para migrar');
END;